#!/bin/bash
BLOCKSIZE="1M"
gameid="nil"
while getopts "i:" optchar; do
  case "$optchar" in
    i) gameid="$OPTARG";;
    *) ;;
  esac
done
shift $(( OPTIND - 1 ))
iso="$1"
target_path="$2"
target="${target_path}/$(basename "${iso}")"

write_iso() {
  bytes="$(wc -c "$iso" | awk '{print $1}')"
  echo "preallocating $(( bytes / 1024 ** 2 ))M with mkfile"
  mkfile "$bytes" "$target" && \
    gdd bs=1M conv=notrunc oflag=dsync status=progress if="${iso}" of="${target}" \
      || return $?
  echo -n "deleting "
  rm -v "$iso"
}

write_vmc() {
  vmc="${target_path}/../VMC/${gameid}_0.bin"
  if [[ ! -e "$vmc" ]]; then
      echo "writing memory card ${vmc}"
      mkfile 8192k "$vmc" && \
        gdd bs="$BLOCKSIZE" conv=notrunc oflag=dsync if=./vmc.bin of="$vmc" \
          || return $?
  fi
}

write_cfg() {
    cfg="${target_path}/../CFG/${gameid}.cfg"
    if [[ ! -e "$cfg" ]]; then
      echo "writing config file ${cfg}"
      tee "${target_path}/../CFG/${gameid}.cfg" <<EOF || exit $?
\$VMC_0=${gameid}_0
\$ConfigSource=1
EOF
    fi
}

if [[ -e "$target" ]] && ! cmp "$iso" "$target"; then
  echo -n "deleting "
  rm -v "$target"
fi

if [[ ! -e "$target" ]]; then
  write_iso || exit $?
fi

if [[ "$gameid" != "nil" ]]; then
  write_vmc

  write_cfg
fi

df -h "${target_path}"
